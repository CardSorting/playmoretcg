"""Initial migration

Revision ID: 51466b55b8e2
Revises: 
Create Date: 2024-12-18 14:53:15.696067

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '51466b55b8e2'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('listings',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('card_id', sa.Integer(), nullable=False),
    sa.Column('seller_id', sa.String(), nullable=False),
    sa.Column('buyer_id', sa.String(), nullable=True),
    sa.Column('listing_type', sa.Enum('FIXED_PRICE', 'AUCTION', name='listingtype'), nullable=False),
    sa.Column('price', sa.Float(), nullable=False),
    sa.Column('status', sa.Enum('ACTIVE', 'SOLD', 'CANCELLED', 'EXPIRED', name='listingstatus'), nullable=False),
    sa.Column('duration', sa.Enum('ONE_HOUR', 'SIX_HOURS', 'TWELVE_HOURS', 'ONE_DAY', 'THREE_DAYS', 'SEVEN_DAYS', name='listingduration'), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('expires_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('sold_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['buyer_id'], ['users.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['card_id'], ['cards.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['seller_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    if_not_exists=True
    )
    op.create_table('bids',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('listing_id', sa.Integer(), nullable=False),
    sa.Column('bidder_id', sa.String(), nullable=False),
    sa.Column('amount', sa.Float(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['bidder_id'], ['users.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['listing_id'], ['listings.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    if_not_exists=True
    )
    
    # Create a new table with the desired schema
    op.create_table(
        'cards_new',
        sa.Column('id', sa.Integer(), primary_key=True),
        sa.Column('user_id', sa.String(), nullable=False),
        sa.Column('set_name', sa.String(), nullable=False),
        sa.Column('card_number', sa.Integer(), nullable=False),
        sa.Column('name', sa.String(), nullable=False),
        sa.Column('rarity', sa.Enum('COMMON', 'UNCOMMON', 'RARE', 'MYTHIC_RARE', name='rarity'), nullable=False),
        sa.Column('card_type', sa.String(), nullable=False),
        sa.Column('mana_cost', sa.String(), nullable=True),
        sa.Column('rules_text', sa.String(), nullable=True),
        sa.Column('flavor_text', sa.String(), nullable=True),
        sa.Column('power', sa.String(), nullable=True),
        sa.Column('toughness', sa.String(), nullable=True),
        sa.Column('artist', sa.String(), nullable=True),
        sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
        if_not_exists=True
    )

    # Copy data from the old table to the new table, providing a default value for missing columns
    op.execute("INSERT INTO cards_new SELECT id, user_id, set_name, card_number, name, rarity, 'Unknown' as card_type, manaCost as mana_cost, abilities as rules_text, flavorText as flavor_text, 'Unknown' as power, 'Unknown' as toughness, 'Unknown' as artist FROM cards")

    # Drop the old table
    op.drop_table('cards')

    # Rename the new table to the old table name
    op.rename_table('cards_new', 'cards')

    op.add_column('users', sa.Column('credits', sa.Integer(), nullable=False))
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('users', 'credits')
    
    # Create a new table with the old schema
    op.create_table(
        'cards_new',
        sa.Column('id', sa.Integer(), primary_key=True),
        sa.Column('user_id', sa.String(), nullable=True),
        sa.Column('set_name', sa.String(), nullable=False),
        sa.Column('card_number', sa.Integer(), nullable=False),
        sa.Column('name', sa.String(), nullable=False),
        sa.Column('rarity', sa.VARCHAR(length=20), nullable=True),
        sa.Column('card_type', sa.String(), nullable=False),
        sa.Column('mana_cost', sa.String(), nullable=True),
        sa.Column('rules_text', sa.String(), nullable=True),
        sa.Column('flavor_text', sa.String(), nullable=True),
        sa.Column('power', sa.String(), nullable=True),
        sa.Column('toughness', sa.String(), nullable=True),
        sa.Column('artist', sa.String(), nullable=True),
        if_not_exists=True
    )

    # Copy data from the new table to the old table
    op.execute("INSERT INTO cards_new SELECT id, user_id, set_name, card_number, name, rarity, card_type, mana_cost, rules_text, flavor_text, power, toughness, artist FROM cards")

    # Drop the old table
    op.drop_table('cards')

    # Rename the new table to the old table name
    op.rename_table('cards_new', 'cards')

    op.drop_table('bids')
    op.drop_table('listings')
    # ### end Alembic commands ###
